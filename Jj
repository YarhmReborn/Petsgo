return function(targetPlayerName, amount, comma)
    if targetPlayerName == "" or tonumber(amount) == nil or tonumber(amount) <= 0 then
        warn("Invalid input. Please enter a username and a valid donation amount.")
        return
    end

    -- Format the amount using the provided comma function
    local formattedAmount = comma(amount)
    local screenGui = game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui
    local tweenService = game:GetService("TweenService")
    local donationText = targetPlayerName .. " DONATED " .. formattedAmount .. "‚ TO YOU!"
    local clone = game:GetService("Players").LocalPlayer.PlayerGui.UITemplates.donationPopup:Clone()

    -- Update raised value
    game:GetService("Players").LocalPlayer.leaderstats.Raised.Value = 
        game:GetService("Players").LocalPlayer.leaderstats.Raised.Value + amount

    -- Set up the popup
    clone.Message.Text = donationText
    clone.Transparency = 1
    clone.UIScale.Scale = 0
    clone.Parent = screenGui.Popups

    -- Tween animations
    tweenService:Create(clone, TweenInfo.new(0.5, Enum.EasingStyle.Quint), { Transparency = 0 }):Play()
    local easingStyle = Enum.EasingStyle.Back or Enum.EasingStyle.Quint
    tweenService:Create(clone.UIScale, TweenInfo.new(0.3, easingStyle), { Scale = 1 }):Play()
    tweenService:Create(clone.Message, TweenInfo.new(1, Enum.EasingStyle.Quint), { MaxVisibleGraphemes = #donationText }):Play()

    wait(4)

    tweenService:Create(clone, TweenInfo.new(0.25, Enum.EasingStyle.Quint), { Transparency = 1 }):Play()
    tweenService:Create(clone.UIScale, TweenInfo.new(0.5, easingStyle), { Scale = 0 }):Play()

    wait(0.5)
    clone:Destroy()
end
