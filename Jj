return function(targetPlayerName, amount, comma)
    if targetPlayerName == "" or tonumber(amount) == nil or tonumber(amount) <= 0 then
        warn("Invalid input. Please enter a username and a valid donation amount.")
        return
    end

    local formattedAmount = comma(amount)

    local player = game:GetService("Players").LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    local uiTemplates = playerGui:FindFirstChild("UITemplates")
    if not uiTemplates then
        warn("UITemplates not found!")
        return
    end

    local donationPopup = uiTemplates:FindFirstChild("donationPopup")
    if not donationPopup then
        warn("Donation popup template not found!")
        return
    end

    local screenGui = playerGui:FindFirstChild("ScreenGui")
    if not screenGui then
        warn("ScreenGui not found!")
        return
    end

    local popups = screenGui:FindFirstChild("Popups")
    if not popups then
        warn("Popups container not found!")
        return
    end

    local popupClone = donationPopup:Clone()
    popupClone.Parent = popups
    popupClone.Visible = true

    local messageLabel = popupClone:FindFirstChild("Message")
    if messageLabel and messageLabel:IsA("TextLabel") then
        messageLabel.Text = targetPlayerName .. " DONATED î€‚" .. formattedAmount .. " TO YOU!"
    end

    local sound = game:GetService("SoundService").SFX.DonationLevels.DonationLevel3
    sound:Play()

    -- Animations for transparency and scaling
    local tweenService = game:GetService("TweenService")

    popupClone.Transparency = 1
    popupClone.UIScale = Instance.new("UIScale", popupClone)
    popupClone.UIScale.Scale = 0

    -- Tween for showing the popup
    local showTween = tweenService:Create(popupClone, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {
        Transparency = 0
    })
    local scaleTween = tweenService:Create(popupClone.UIScale, TweenInfo.new(0.3, Enum.EasingStyle.Back), {
        Scale = 1
    })
    showTween:Play()
    scaleTween:Play()

    -- Message animation
    if messageLabel then
        local textTween = tweenService:Create(messageLabel, TweenInfo.new(1, Enum.EasingStyle.Quint), {
            MaxVisibleGraphemes = #messageLabel.Text
        })
        textTween:Play()
    end

    wait(4)

    -- Tween for hiding the popup
    local hideTween = tweenService:Create(popupClone, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {
        Transparency = 1
    })
    local scaleOutTween = tweenService:Create(popupClone.UIScale, TweenInfo.new(0.5, Enum.EasingStyle.Back), {
        Scale = 0
    })
    hideTween:Play()
    scaleOutTween:Play()

    wait(0.5)
    popupClone:Destroy()
end
